// <auto-generated />
using Genogram.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Genogram.Infrastructure.Migrations
{
    [DbContext(typeof(GenogramDbContext))]
    [Migration("20241128124134_SeedingData")]
    partial class SeedingData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Genogram.Domain.Entites.UserEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DateOfBirth")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Language")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nationality")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Pincode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Street")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserImage")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Springfield",
                            DateOfBirth = "1985-01-01",
                            Email = "john.doe@example.com",
                            Language = "English",
                            Name = "John Doe",
                            Nationality = "American",
                            Pincode = "12345",
                            Street = "123 Elm Street"
                        },
                        new
                        {
                            Id = 2,
                            City = "Shelbyville",
                            DateOfBirth = "1990-05-15",
                            Email = "jane.smith@example.com",
                            Language = "French",
                            Name = "Jane Smith",
                            Nationality = "Canadian",
                            Pincode = "67890",
                            Street = "456 Oak Avenue"
                        });
                });

            modelBuilder.Entity("Genogram.Domain.Entites.UserRelationEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PrimaryContact")
                        .HasColumnType("bit");

                    b.Property<string>("Relationship")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Remarks")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("UserRelations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Email = "michael.doe@example.com",
                            FirstName = "Michael",
                            LastName = "Doe",
                            Phone = "7569373620",
                            PrimaryContact = true,
                            Relationship = "Son",
                            UserId = 1
                        },
                        new
                        {
                            Id = 2,
                            Email = "anna.doe@example.com",
                            FirstName = "Anna",
                            LastName = "Doe",
                            Phone = "9550788502",
                            PrimaryContact = false,
                            Relationship = "Daughter",
                            UserId = 1
                        },
                        new
                        {
                            Id = 3,
                            Email = "mark.smith@example.com",
                            FirstName = "Mark",
                            LastName = "Smith",
                            PrimaryContact = true,
                            Relationship = "Brother",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("Genogram.Domain.Entites.UserRelationEntity", b =>
                {
                    b.HasOne("Genogram.Domain.Entites.UserEntity", "User")
                        .WithMany("UserRelations")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("Genogram.Domain.Entites.UserEntity", b =>
                {
                    b.Navigation("UserRelations");
                });
#pragma warning restore 612, 618
        }
    }
}
